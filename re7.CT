<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>15</ID>
      <Description>"Infinite Health"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re7.exe
  Version: 
  Date   : 2021-05-14
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infHealth,re7.exe,F3 0F 11 52 24 66 0F 2F C1 72 20) // should be unique
alloc(newmem,$1000,infHealth)

label(code)
label(return)

newmem:

code:
  nop
  nop
  nop
  nop
  nop
  jmp return

infHealth:
  jmp newmem
return:
registersymbol(infHealth)

[DISABLE]

infHealth:
  db F3 0F 11 52 24

unregistersymbol(infHealth)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re7.exe+B1EE1F

re7.exe+B1EE0A: CC                 - int 3 
re7.exe+B1EE0B: CC                 - int 3 
re7.exe+B1EE0C: CC                 - int 3 
re7.exe+B1EE0D: CC                 - int 3 
re7.exe+B1EE0E: CC                 - int 3 
re7.exe+B1EE0F: CC                 - int 3 
re7.exe+B1EE10: F3 0F 10 5A 20     - movss xmm3,[rdx+20]
re7.exe+B1EE15: 0F 57 C9           - xorps xmm1,xmm1
re7.exe+B1EE18: 0F 5A C3           - cvtps2pd xmm0,xmm3
re7.exe+B1EE1B: F3 0F 5A CA        - cvtss2sd xmm1,xmm2
// ---------- INJECTING HERE ----------
re7.exe+B1EE1F: F3 0F 11 52 24     - movss [rdx+24],xmm2
// ---------- DONE INJECTING  ----------
re7.exe+B1EE24: 66 0F 2F C1        - comisd xmm0,xmm1
re7.exe+B1EE28: 72 20              - jb re7.exe+B1EE4A
re7.exe+B1EE2A: 33 C0              - xor eax,eax
re7.exe+B1EE2C: 0F 57 C9           - xorps xmm1,xmm1
re7.exe+B1EE2F: 89 44 24 18        - mov [rsp+18],eax
re7.exe+B1EE33: F3 0F 10 44 24 18  - movss xmm0,[rsp+18]
re7.exe+B1EE39: 0F 5A C0           - cvtps2pd xmm0,xmm0
re7.exe+B1EE3C: F3 0F 5A CA        - cvtss2sd xmm1,xmm2
re7.exe+B1EE40: 66 0F 2F C8        - comisd xmm1,xmm0
re7.exe+B1EE44: 73 09              - jae re7.exe+B1EE4F
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"Infinite O2"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re7.exe
  Version: 
  Date   : 2021-05-14
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infO2,re7.exe,00 F3 0F 11 12 C3) // should be unique
alloc(newmem,$1000,infO2)

label(code)
label(return)

newmem:

code:
  nop
  nop
  nop
  nop
  ret 
  jmp return

infO2+01:
  jmp newmem
return:
registersymbol(infO2)

[DISABLE]

infO2+01:
  db F3 0F 11 12 C3

unregistersymbol(infO2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re7.exe+21B528D

re7.exe+21B526B: 48 83 79 40 00  - cmp qword ptr [rcx+40],00
re7.exe+21B5270: 74 1B           - je re7.exe+21B528D
re7.exe+21B5272: F3 0F 10 02     - movss xmm0,[rdx]
re7.exe+21B5276: 0F 2E C2        - ucomiss xmm0,xmm2
re7.exe+21B5279: 7A 02           - jp re7.exe+21B527D
re7.exe+21B527B: 74 14           - je re7.exe+21B5291
re7.exe+21B527D: F3 0F 11 12     - movss [rdx],xmm2
re7.exe+21B5281: 48 8B D1        - mov rdx,rcx
re7.exe+21B5284: 48 8B 49 40     - mov rcx,[rcx+40]
re7.exe+21B5288: E9 93 28 00 00  - jmp re7.exe+21B7B20
// ---------- INJECTING HERE ----------
re7.exe+21B528D: F3 0F 11 12     - movss [rdx],xmm2
// ---------- DONE INJECTING  ----------
re7.exe+21B5291: C3              - ret 
re7.exe+21B5292: CC              - int 3 
re7.exe+21B5293: CC              - int 3 
re7.exe+21B5294: CC              - int 3 
re7.exe+21B5295: CC              - int 3 
re7.exe+21B5296: CC              - int 3 
re7.exe+21B5297: CC              - int 3 
re7.exe+21B5298: CC              - int 3 
re7.exe+21B5299: CC              - int 3 
re7.exe+21B529A: CC              - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"Infinite Ammo"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re7.exe
  Version: 
  Date   : 2021-05-15
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infAmmo,re7.exe,41 FF C8 48 8B D3) // should be unique
alloc(newmem,$1000,infAmmo)

label(code)
label(return)

newmem:

code:
  inc r8d
  mov rdx,rbx
  jmp return

infAmmo:
  jmp newmem
  nop
return:
registersymbol(infAmmo)

[DISABLE]

infAmmo:
  db 41 FF C8 48 8B D3

unregistersymbol(infAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re7.exe+608DCC

re7.exe+608DAE: 85 C9                 - test ecx,ecx
re7.exe+608DB0: 0F 9E C0              - setle al
re7.exe+608DB3: 48 85 D2              - test rdx,rdx
re7.exe+608DB6: 75 97                 - jne re7.exe+608D4F
re7.exe+608DB8: 84 C0                 - test al,al
re7.exe+608DBA: 75 93                 - jne re7.exe+608D4F
re7.exe+608DBC: 48 8B 83 78 01 00 00  - mov rax,[rbx+00000178]
re7.exe+608DC3: 48 85 C0              - test rax,rax
re7.exe+608DC6: 74 04                 - je re7.exe+608DCC
re7.exe+608DC8: 44 8B 40 24           - mov r8d,[rax+24]
// ---------- INJECTING HERE ----------
re7.exe+608DCC: 41 FF C8              - dec r8d
// ---------- DONE INJECTING  ----------
re7.exe+608DCF: 48 8B D3              - mov rdx,rbx
re7.exe+608DD2: 48 8B CF              - mov rcx,rdi
re7.exe+608DD5: E8 B6 C1 FD FF        - call re7.exe+5E4F90
re7.exe+608DDA: 48 8B 47 50           - mov rax,[rdi+50]
re7.exe+608DDE: 48 83 78 18 00        - cmp qword ptr [rax+18],00
re7.exe+608DE3: 0F 94 C0              - sete al
re7.exe+608DE6: 48 8B 5C 24 30        - mov rbx,[rsp+30]
re7.exe+608DEB: 48 83 C4 20           - add rsp,20
re7.exe+608DEF: 5F                    - pop rdi
re7.exe+608DF0: C3                    - ret 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"Infinite Grenades"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re7.exe
  Version: 
  Date   : 2021-05-15
  Author : john

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infGrenades,re7.exe,FF C8 48 89 BC 24 90 00 00 00) // should be unique
alloc(newmem,$1000,infGrenades)

label(code)
label(return)

newmem:

code:
  inc eax
  mov [rsp+00000090],rdi
  jmp return

infGrenades:
  jmp newmem
  nop 5
return:
registersymbol(infGrenades)

[DISABLE]

infGrenades:
  db FF C8 48 89 BC 24 90 00 00 00

unregistersymbol(infGrenades)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re7.exe+16874D5

re7.exe+16874AE: 0F 84 EF 02 00 00        - je re7.exe+16877A3
re7.exe+16874B4: 48 8B CB                 - mov rcx,rbx
re7.exe+16874B7: 48 85 F6                 - test rsi,rsi
re7.exe+16874BA: 75 10                    - jne re7.exe+16874CC
re7.exe+16874BC: 45 33 C0                 - xor r8d,r8d
re7.exe+16874BF: 8D 56 26                 - lea edx,[rsi+26]
re7.exe+16874C2: E8 59 1A B1 00           - call re7.exe+2198F20
re7.exe+16874C7: E9 D7 02 00 00           - jmp re7.exe+16877A3
re7.exe+16874CC: 8B 86 88 00 00 00        - mov eax,[rsi+00000088]
re7.exe+16874D2: 48 8B D6                 - mov rdx,rsi
// ---------- INJECTING HERE ----------
re7.exe+16874D5: FF C8                    - dec eax
// ---------- DONE INJECTING  ----------
re7.exe+16874D7: 48 89 BC 24 90 00 00 00  - mov [rsp+00000090],rdi
re7.exe+16874DF: 85 C0                    - test eax,eax
re7.exe+16874E1: 41 8B FE                 - mov edi,r14d
re7.exe+16874E4: 0F 4F F8                 - cmovg edi,eax
re7.exe+16874E7: 89 BE 88 00 00 00        - mov [rsi+00000088],edi
re7.exe+16874ED: E8 9E 50 EB FE           - call re7.exe+53C590
re7.exe+16874F2: 48 8B 4B 50              - mov rcx,[rbx+50]
re7.exe+16874F6: 4C 39 61 18              - cmp [rcx+18],r12
re7.exe+16874FA: 0F 85 9B 02 00 00        - jne re7.exe+168779B
re7.exe+1687500: 3B F8                    - cmp edi,eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"health pointer"</Description>
      <LastState Value="3000" RealAddress="16A7118FB84"/>
      <VariableType>Float</VariableType>
      <Address>"re7.exe"+081EA150</Address>
      <Offsets>
        <Offset>24</Offset>
        <Offset>70</Offset>
        <Offset>28</Offset>
        <Offset>28</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>24</ID>
      <Description>"O2 pointer"</Description>
      <LastState Value="100" RealAddress="16A71D20CC0"/>
      <VariableType>Float</VariableType>
      <Address>"re7.exe"+081F01C0</Address>
      <Offsets>
        <Offset>20</Offset>
        <Offset>D8</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rdi+24],ebx</Description>
      <AddressString>re7.exe+5E4FFB</AddressString>
      <Before>
        <Byte>E9</Byte>
        <Byte>25</Byte>
        <Byte>3F</Byte>
        <Byte>BB</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>5F</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [rsi+00000088],edi</Description>
      <AddressString>re7.exe+16874E7</AddressString>
      <Before>
        <Byte>8B</Byte>
        <Byte>FE</Byte>
        <Byte>0F</Byte>
        <Byte>4F</Byte>
        <Byte>F8</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>BE</Byte>
        <Byte>88</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>9E</Byte>
        <Byte>50</Byte>
        <Byte>EB</Byte>
        <Byte>FE</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movss [rdi+54],xmm1</Description>
      <AddressString>re7.exe+56C3D7</AddressString>
      <Before>
        <Byte>C8</Byte>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4F</Byte>
        <Byte>54</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>4F</Byte>
        <Byte>20</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movss xmm0,[rdx+rax]</Description>
      <AddressString>re7.exe+21F3CB6</AddressString>
      <Before>
        <Byte>40</Byte>
        <Byte>0C</Byte>
        <Byte>48</Byte>
        <Byte>03</Byte>
        <Byte>C7</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>04</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>40</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movss [rdx+24],xmm2</Description>
      <AddressString>re7.exe+B1EE1F</AddressString>
      <Before>
        <Byte>C3</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>CA</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>52</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C1</Byte>
        <Byte>72</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movss [rdx],xmm2</Description>
      <AddressString>re7.exe+21B528D</AddressString>
      <Before>
        <Byte>E9</Byte>
        <Byte>93</Byte>
        <Byte>28</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>12</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
